PARSER_BEGIN(PolicyExpressionParser)

public class PolicyExpressionParser {
}

PARSER_END(PolicyExpressionParser)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
    < ACTION_ID: "action-id" > |
    < SUBJECT_ID: "subject-id" > |
    < RESOURCE_ID: "resource-id" > |
    < XACML_ATTRIBUTE : <ACTION_ID> | <SUBJECT_ID> | <RESOURCE_ID> > |
    < DECIMAL_LITERAL: ["1"-"9"] (["0"-"9"])* > |
    < STRING_LITERAL : "\"" (   (~["\"","\\","\n","\r"])
                               | ("\\"
                                   ( ["n","t","b","r","f","\\","'","\""]
                                   | ["0"-"7"] ( ["0"-"7"] )?
                                   | ["0"-"3"] ["0"-"7"] ["0"-"7"]
                                   )
                                 )
                             )* "\"" > |
    < OBJECT_PROPERTY : "object\\." <STRING_LITERAL> ("\\." <STRING_LITERAL>)? >
}

void Expression():
{}
{
   TargetExpression() <EOF>
}

void TargetExpression():
{}
{
    AttributeReference() Function() AttributeValue()
}

void AttributeReference():
{}
{
    <OBJECT_PROPERTY> | <XACML_ATTRIBUTE>
}

void Function():
{}
{
    "==" | "!=" | ">=" | "<=" | ">" | "<" | "in" | "one-of" | "subset"
}

void AttributeValue():
{}
{
   <DECIMAL_LITERAL> | <STRING_LITERAL>
}